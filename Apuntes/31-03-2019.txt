
Creando mutation e input para nuevos clientes
---

Si tienes una api debe tener un endpoint donde el usuario pueda crear un registro.

---

El mutation es la forma de cambiar o crear nuevos datos.

---

mutation {
	crearCliente(input: {
		nombre: "Alquies"
		apellido: "Canto"
		empresa: "salsa"
		email: "a.bailo@gmai.com"
	}){
		id
		nombre
		apellido
	}
}

---

Result

{
  "data": {
    "crearCliente": {
      "id": "87a04936b9c39378df60",
      "nombre": "Alquies",
      "apellido": "Canto"
    }
  }
}
---

Más sobre los resolvers y obtener un registro por id

Resolver son funciones que van a hacer las interaciones con el schema de GraphQL.

{
  getCliente(id: "4ed9209c52ef5f6f29d0"){
    empresa
    nombre
    apellido
  }
}

---
Result

{
  "data": {
    "getCliente": {
      "empresa": "salsa",
      "nombre": "Alquies",
      "apellido": "Bailo"
    }
  }
}
---

Tipos de datos en GraphQL

INT = Número enteros
FLOAT = Número con decimales
STRING = cadena de texto
ID = número único
BOOLEAN = true o false
---

En el type del objeto, el input y en el resolver al agregar un nuevo dato 
de cualquier tipo, en el objeto especifico que se modifique su estructura.

---














